knitr::opts_chunk$set(echo = TRUE)
# Enter code here
comm_data <- read.csv(CommQuest2023_Larger.csv)
# Enter code here
comm_data <- read.csv("CommQuest2023_Larger.csv")
# Enter code here
comm_data <- read.csv("CommQuest2023_Larger.csv")
# Enter code here
select(date,channel,message)
# Enter code here
select(date, channel, message)
library("dplyr")
# Enter code here
select(date, channel, message)
# Enter code here
select(date, channel, message)
class(comm_data)
setwd("~/Desktop/nus y3s1/NM2207 Computational Media Literacy/Week-4/Challenge")
# Enter code here
select(date, channel, message)
# Enter code here
select(date, channel, message)
knitr::opts_chunk$set(echo = TRUE)
# Enter code here
select(date, channel, message)
setwd("~/Desktop/nus y3s1/NM2207 Computational Media Literacy/Week-4/Challenge")
# Enter code here
comm_data <- read.csv(/Users/iannnlee/Desktop/nus y3s1/NM2207 Computational Media Literacy/Week-4/Challenge/CommQuest2023_Larger.csv)
# Enter code here
comm_data <- read.csv(Users/iannnlee/Desktop/nus y3s1/NM2207 Computational Media Literacy/Week-4/Challenge/CommQuest2023_Larger.csv)
# Enter code here
comm_data <- read_csv(Users/iannnlee/Desktop/nus y3s1/NM2207 Computational Media Literacy/Week-4/Challenge/CommQuest2023_Larger.csv)
# Enter code here
comm_data <- read.csv(CommQuest2023_Larger.csv)
# Enter code here
comm_data <- read.csv("CommQuest2023_Larger.csv")
# Enter code here
select(date, channel, message)
install.packages("tidyverse")
# Enter code here
select(date, channel, message)
dplyr::select(comm_data, date, channel, message)
rm(list = ls())  # Clear the global environment
# Enter code here
comm_data <- read.csv("CommQuest2023_Larger.csv")
# Enter code here
select(date, channel, message)
# Enter code here
select.list(date, channel, message)
# Enter code here
select(date, channel, message)
# Enter code here
# Assuming you have the dplyr package installed and loaded
library(dplyr)
# Assuming you have a dataframe named "comm_data"
# Create a new dataframe with selected columns
selected_columns <- comm_data %>%
select(date, channel, message)
# Display the new dataframe
print(selected_columns)
select(date, channel, message)
# Enter code here
selected_columns <- comm_data %>%
select(date, channel, message)
# Enter code here
selected_columns <- comm_data %>%
select(date, channel, message)
print(selected_columns)
print(selected_columns)
print(filtered_data)
print(filter_data)
# Enter code here
filter_data <- comm_data %>%
filter(channel == "Twitter", date == as.Date("2023-08-02"))
print(filter_data)
# Enter code here
asc_data <- comm_data %>%
arrange(date)
print(asc_data)
print(unique_senders)
# Enter code here
unique_senders <- comm_data %>%
distinct(sender)
print(unique_senders)
# Enter code here
unique_senders <- comm_data %>%
distinct(sender)
print(unique_senders)
# Enter code here
count_data <- comm_data %>%
group_by(sender) %>%
count()
print(count_data)
# Enter code here
count_data <- comm_data %>%
group_by(sender) %>%
summarise(count = n())
print(count_data)
# Enter code here
count_data <- comm_data %>%
group_by(sender) %>%
count()
print(count_data)
# Enter code here
summary_data <- comm_data %>%
group_by(channel) %>%
count()
print(summary_data)
# Enter code here
message_data <- comm_data %>%
group_by(sender) %>%
count()
print(message_data)
# Enter code here
channel_data <- comm_data %>%
group_by(channel) %>%
count()
print(channel_data)
# Enter code here
positive_senders <- comm_data %>%
filter(sentiment_score > 0) %>%
select(sender, sentiment_score) %>%
group_by(sender) %>%
summarize(average_sentiment = mean(sentiment_score)) %>%
arrange(desc(average_sentiment)) %>%
head(3)
# Enter code here
top_senders <- comm_data %>%
filter(sentiment_ > 0) %>%
select(sender, sentiment) %>%
group_by(sender) %>%
summarize(average_sentiment = mean(sentiment)) %>%
arrange(desc(average_sentiment)) %>%
head(3)
# Enter code here
top_senders <- comm_data %>%
filter(sentiment > 0) %>%
select(sender, sentiment) %>%
group_by(sender) %>%
summarize(average_sentiment = mean(sentiment)) %>%
arrange(desc(average_sentiment)) %>%
head(3)
# Enter code here
top_senders <- comm_data %>%
filter(sentiment > 0) %>%
select(sender, sentiment) %>%
group_by(sender) %>%
summarize(average_sentiment = mean(sentiment)) %>%
arrange(desc(average_sentiment)) %>%
head(3)
print(top_senders)
# Enter code here
top_senders <- comm_data %>%
filter(sentiment > 0) %>%
select(sender, sentiment) %>%
group_by(sender) %>%
summarize(average_sentiment = mean(sentiment)) %>%
arrange(desc(average_sentiment))
print(top_senders)
# Enter code here
top_senders <- comm_data %>%
filter(sentiment > 0) %>%
select(sender, sentiment) %>%
group_by(sender) %>%
summarize(average_sentiment = mean(sentiment)) %>%
arrange(desc(average_sentiment)) %>%
head(3)
print(top_senders)
# Enter code here
top_senders <- comm_data %>%
filter(sentiment > 0) %>%
select(sender, sentiment) %>%
group_by(sender) %>%
summarize(average_sentiment = mean(sentiment)) %>%
arrange(desc(average_sentiment)) %>%
head(3)
print(top_senders)
# Enter code here
average_sentiment <- comm_data %>%
group_by(date) %>%
summarize(average_sentiment = mean(sentiment)) %>%
arrange(date)
print(average_sentiment)
# Enter code here
average_sentiment <- comm_data %>%
group_by(date) %>%
summarize(average_sentiment = mean(sentiment))
print(average_sentiment)
# Enter code here
negative_messages <- comm_data %>%
filter (sentiment < 0) %>%
select(date, channel, message, sentiment)
print(negative_messages)
# Enter code here
top_senders <- comm_data %>%
filter(sentiment > 0) %>%
select(sender, sentiment) %>%
group_by(sender) %>%
summarize(average_sentiment = mean(sentiment)) %>%
arrange(desc(average_sentiment)) %>%
slice(1:3)
print(top_senders)
# Enter code here
top_senders <- comm_data %>%
filter(sentiment > 0) %>%
select(sender, sentiment) %>%
group_by(sender) %>%
summarize(average_sentiment = mean(sentiment)) %>%
arrange(desc(average_sentiment)) %>%
slice(:3)
# Enter code here
top_senders <- comm_data %>%
filter(sentiment > 0) %>%
select(sender, sentiment) %>%
group_by(sender) %>%
summarize(average_sentiment = mean(sentiment)) %>%
arrange(desc(average_sentiment)) %>%
slice(3)
print(top_senders)
# Enter code here
top_senders <- comm_data %>%
filter(sentiment > 0) %>%
select(sender, sentiment) %>%
group_by(sender) %>%
summarize(average_sentiment = mean(sentiment)) %>%
arrange(desc(average_sentiment)) %>%
slice(1:3)
print(top_senders)
# Enter code here
top_senders <- comm_data %>%
filter(sentiment > 0) %>%
select(sender, sentiment) %>%
group_by(sender) %>%
summarize(average_sentiment = mean(sentiment)) %>%
arrange(desc(average_sentiment)) %>%
head(3)
print(top_senders)
# Enter code here
top_senders <- comm_data %>%
filter(sentiment > 0) %>%
select(sender, sentiment) %>%
group_by(sender) %>%
summarize(average_sentiment = mean(sentiment)) %>%
arrange(desc(average_sentiment)) %>%
slice(1:3)
print(top_senders)
# Enter code here
sentiment_label <- comm_data %>%
mutate(sentiment = case_when(
sentiment_score > 0 => "Positive",
# Enter code here
sentiment_label <- comm_data %>%
mutate(sentiment = case_when(
sentiment > 0 => "Positive",
# Enter code here
sentiment_label <- comm_data %>%
mutate(sentiment = case_when(
sentiment > 0 = "Positive",
# Enter code here
sentiment_label <- comm_data %>%
mutate(sentiment_label = case_when(
sentiment > 0 = "Positive",
# Enter code here
sentiment_label <- comm_data %>%
mutate(sentiment_label = case_when(
sentiment > 0 => "Positive",
# Enter code here
sentiment_label <- comm_data %>%
mutate(sentiment_label = case_when(
sentiment > 0 ~ "Positive",
sentiment == 0 ~ "Neutral",
sentiment < 0 ~ "Negative"))
print(sentiment_label)
# Enter code here
sentiment_label <- comm_data %>%
mutate(sentiment_label = case_when(
sentiment > 0 ~ "Positive",
sentiment == 0 ~ "Neutral",
sentiment < 0 ~ "Negative"))
print(sentiment_label)
# Enter code here
sentiment_product <- comm_data %>%
mutate(product_sentiment_length = sentiment_score * nchar(message)) %>%
arrange(desc(product_sentiment_length))
# Enter code here
sentiment_product <- comm_data %>%
mutate(product_sentiment_length = sentiment * nchar(message)) %>%
arrange(desc(product_sentiment_length))
print(sentiment_product)
# Enter code here
sentiment_product <- comm_data %>%
mutate(product_sentiment_score_and_length = sentiment * nchar(message)) %>%
arrange(desc(product_sentiment_length))
# Enter code here
sentiment_product <- comm_data %>%
mutate(product_sentiment_score_and_length = sentiment * nchar(message)) %>%
arrange(desc(product_sentiment_score_and_length))
print(sentiment_product)
# Enter code here
sentiment_product <- comm_data %>%
mutate(product_sentiment_score_and_length = sentiment * nchar(message)) %>%
arrange(desc(product_sentiment_score_and_length))
print(sentiment_product)
# Enter code here
highest_characters <- comm_data %>%
group_by(day) %>%
summarise(character_count = sum(nchar(message))) %>%
arrange(desc(charachter_count))
# Enter code here
highest_characters <- comm_data %>%
group_by(date) %>%
summarise(character_count = sum(nchar(message))) %>%
arrange(desc(charachter_count))
# Enter code here
highest_characters <- comm_data %>%
group_by(date) %>%
summarise(character_count = sum(nchar(message))) %>%
arrange(desc(character_count))
print(highest_characters)
# Enter code here
selected_columns <- comm_data %>%
select(date, channel, message)
print(selected_columns)
library(dplyr)
library("dplyr")
# Enter code here
library("dplyr")
comm_data <- read.csv("CommQuest2023_Larger.csv")
# Enter code here
sentiment_product <- comm_data %>%
mutate(product_sentiment_score_and_length = sentiment * nchar(message)) %>%
arrange(desc(product_sentiment_score_and_length))
print(sentiment_product)
# Enter code here
filter_data <- comm_data %>%
filter(channel == "Twitter", date == "2023-08-02")
print(filter_data)
# Enter code here
filter_data <- comm_data %>%
filter(channel == "Twitter", date == as.Date("2023-08-02"))
print(filter_data)
# Enter code here
filter_data <- comm_data %>%
filter(channel == "Twitter", date == "2023-08-02")
print(filter_data)
# Enter code here
aug_2nd_twitter <- comm_data %>%
filter(channel == "Twitter", date == "2023-08-02")
print(aug_2nd_twitter)
# Enter code here
top_senders <- comm_data %>%
filter(sentiment > 0) %>%
select(sender, sentiment) %>%
summarize(average_sentiment = mean(sentiment)) %>%
arrange(desc(average_sentiment)) %>%
slice(1:3)
print(top_senders)
# Enter code here
top_senders <- comm_data %>%
filter(sentiment > 0) %>%
select(sender, sentiment) %>%
group_by(sender) %>%
summarize(average_sentiment = mean(sentiment)) %>%
arrange(desc(average_sentiment)) %>%
slice(1:3)
print(top_senders)
# Enter code here
negative_messages <- comm_data %>%
filter (sentiment < 0) %>%
select(message, sentiment)
print(negative_messages)
# Enter code here
sentiment_label <- comm_data %>%
mutate(sentiment_label = case_when(
sentiment > 0 ~ "Positive",
sentiment == 0 ~ "Neutral",
sentiment < 0 ~ "Negative"))
comm_data <- comm_data %>%
mutate(sentiment_label = ifelse(sentiment > 0, "Positive"),
ifelse(sentiment == 0, "Neutral"),
ifelse(sentiment < 0,"Negative"))
# Enter code here
comm_data <- comm_data %>%
mutate(sentiment_label = ifelse(sentiment > 0, "Positive"),
ifelse(sentiment == 0, "Neutral"),
ifelse(sentiment < 0,"Negative"))
# Enter code here
comm_data <- comm_data %>%
mutate(sentiment_label = ifelse(sentiment > 0, "Positive"),
ifelse(sentiment == 0, "Neutral"),
ifelse(sentiment < 0,"Negative"))
# Enter code here
comm_data <- comm_data %>%
mutate(sentiment_label = ifelse(sentiment > 0, "Positive",
ifelse(sentiment == 0, "Neutral", "Negative")))
print(sentiment_label)
# Enter code here
sentiment_label <- comm_data %>%
mutate(sentiment_label = ifelse(sentiment > 0, "Positive",
ifelse(sentiment == 0, "Neutral", "Negative")))
print(sentiment_label)
# Enter code here
negative_messages <- comm_data %>%
filter (sentiment < 0) %>%
select(date, sender, message, sentiment)
print(negative_messages)
# Enter code here
highest_characters <- comm_data %>%
group_by(date) %>%
summarise(character_count = sum(nchar(message))) %>%
arrange(desc(character_count)) %>%
head(1)
print(highest_characters)
setwd("~/Desktop/nus y3s1/NM2207 Computational Media Literacy/Week-5/Code-along")
